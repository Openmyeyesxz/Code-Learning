
## 遍历目录

1. 通过 cd 目录切换命令进行操作
	- 语法： cd destination
	- cd也可以直接回到主目录中

2. pwd命令可以显示出shell会话的当前目录

3. 绝对路径和相对路径

相对路径中：“.”可以表示当前目录；“..”可以表示父目录

``` shell
[xh@localhost ~]$ cd /usr/bin
[xh@localhost bin]$ pwd

/usr/bin
--------------------------------------
[xh@localhost bin]$ cd /var/log
[xh@localhost log]$ pwd

/var/log
--------------------------------------
[xh@localhost log]$ cd
[xh@localhost ~]$ pwd

/home/xh
--------------------------------------
[xh@localhost ~]$ cd /home/xh/Documents

[xh@localhost Documents]$ cd

[xh@localhost ~]$ cd Documents

[xh@localhost Documents]$ pwd

/home/xh/Documents
--------------------------------------
[xh@localhost Documents]$ cd ../Downloads
[xh@localhost Downloads]$ pwd

/home/xh/Downloads
--------------------------------------
[xh@localhost Downloads]$ cd ../../etc

bash: cd: ../../etc: No such file or directory
--------------------------------------
[xh@localhost Downloads]$ cd

# 相对路径返回两次到父目录
[xh@localhost ~]$ cd ../../etc

[xh@localhost etc]$ cd
--------------------------------------
```
## 列出文件和目录

1. ls命令会以最基本形式列出所有文件
```shell
[xh@localhost ~]$ ls
Desktop  Documents  Downloads  Music  Pictures  Public  Templates  Videos
--------------------------------------
```

2. ls -a 显示隐藏文件
```shell
[xh@localhost ~]$ ls -a
.              .bash_profile  .dbus      .esd_auth      Music     Templates
..             .bashrc        Desktop    .ICEauthority  Pictures  Videos
.bash_history  .cache         Documents  .local         .pki      .viminfo
.bash_logout   .config        Downloads  .mozilla       Public

--------------------------------------
```

3. ls -F 命令 可以分出目录与文件
4. ls -R 列出当前目录中所有子目录包含的文件
⭐ 命令可以合并： ls -FR
```shell
[xh@localhost ~]$ ls -F -R
.:
Desktop/    Downloads/  Pictures/  Templates/
Documents/  Music/      Public/    Videos/

./Desktop:

./Documents:

./Downloads:

./Music:

./Pictures:

./Public:

./Templates:

./Videos:
--------------------------------------

[xh@localhost ~]$ ls -FR
.:
Desktop/    Downloads/  Pictures/  Templates/
Documents/  Music/      Public/    Videos/

./Desktop:

./Documents:

./Downloads:

./Music:

./Pictures:

./Public:

./Templates:

./Videos:

--------------------------------------
```

5. ls -l 可以输出文件的大多信息；如果想查看目录的信息：ls -ld 目录名
```shell
[xh@localhost ~]$ ls -1
Desktop
Documents
Downloads
Music
Pictures
Public
Templates
Videos
[xh@localhost ~]$ ls -l
total 0
drwxr-xr-x. 2 xh xh 6 Nov 10 14:59 Desktop
drwxr-xr-x. 2 xh xh 6 Nov 10 14:59 Documents
drwxr-xr-x. 2 xh xh 6 Nov 10 14:59 Downloads
drwxr-xr-x. 2 xh xh 6 Nov 10 14:59 Music
drwxr-xr-x. 2 xh xh 6 Nov 10 14:59 Pictures
drwxr-xr-x. 2 xh xh 6 Nov 10 14:59 Public
drwxr-xr-x. 2 xh xh 6 Nov 10 14:59 Templates
drwxr-xr-x. 2 xh xh 6 Nov 10 14:59 Videos
[xh@localhost ~]$ ls -alF
total 36
drwx------. 16 xh   xh   4096 Nov 10 14:59 ./
drwxr-xr-x.  3 root root   16 Nov  2 09:01 ../
-rw-------.  1 xh   xh    245 Nov 10 14:56 .bash_history
-rw-r--r--.  1 xh   xh     18 Oct 31  2018 .bash_logout
-rw-r--r--.  1 xh   xh    193 Oct 31  2018 .bash_profile
-rw-r--r--.  1 xh   xh    231 Oct 31  2018 .bashrc
drwx------. 18 xh   xh   4096 Nov 10 12:32 .cache/
drwxr-xr-x. 14 xh   xh    261 Nov 10 14:59 .config/
drwx------.  3 xh   xh     25 Nov  2 09:01 .dbus/
drwxr-xr-x.  2 xh   xh      6 Nov 10 14:59 Desktop/
drwxr-xr-x.  2 xh   xh      6 Nov 10 14:59 Documents/
drwxr-xr-x.  2 xh   xh      6 Nov 10 14:59 Downloads/
-rw-------.  1 xh   xh     16 Nov  2 09:01 .esd_auth
-rw-------.  1 xh   xh   1554 Nov 10 14:58 .ICEauthority
drwx------.  3 xh   xh     19 Nov  2 09:01 .local/
drwxr-xr-x.  6 xh   xh     81 Nov  2 01:18 .mozilla/
drwxr-xr-x.  2 xh   xh      6 Nov 10 14:59 Music/
drwxr-xr-x.  2 xh   xh      6 Nov 10 14:59 Pictures/
drwxrw----.  3 xh   xh     19 Nov  2 01:19 .pki/
drwxr-xr-x.  2 xh   xh      6 Nov 10 14:59 Public/
drwxr-xr-x.  2 xh   xh      6 Nov 10 14:59 Templates/
drwxr-xr-x.  2 xh   xh      6 Nov 10 14:59 Videos/
-rw-------.  1 xh   xh    760 Nov  2 09:11 .viminfo
--------------------------------------
```

6. 过滤输出列表：
	1. touch命令 可以创建文件
	2. 标准通配符：“？”代表单个字符； “ * ”代表多个字符
	3. 也可以只用"[a-i]"来设定范围；"[!a]"来筛除含a文件

```shell
[xh@localhost ~]$ ls -l my_scr?pt
-rw-rw-r--. 1 xh xh 0 Nov 10 15:27 my_scrapt
-rw-rw-r--. 1 xh xh 0 Nov 10 15:27 my_script
--------------------------------------

[xh@localhost ~]$ ls -l my*
-rw-rw-r--. 1 xh xh 0 Nov 10 15:27 my_file
-rw-rw-r--. 1 xh xh 0 Nov 10 15:27 my_scrapt
-rw-rw-r--. 1 xh xh 0 Nov 10 15:27 my_script
--------------------------------------

[xh@localhost ~]$ ls -l my_s*t
-rw-rw-r--. 1 xh xh 0 Nov 10 15:27 my_scrapt
-rw-rw-r--. 1 xh xh 0 Nov 10 15:27 my_script
--------------------------------------

[xh@localhost ~]$ ls -l my_scr[ay]pt
-rw-rw-r--. 1 xh xh 0 Nov 10 15:27 my_scrapt
--------------------------------------

[xh@localhost ~]$ ls -l my_f[a-i]ll
ls: cannot access my_f[a-i]ll: No such file or directory
--------------------------------------

[xh@localhost ~]$ ls f*ll
fall  fell  fill  full
--------------------------------------

[xh@localhost ~]$ ls f[a-i]ll
fall  fell  fill
--------------------------------------

[xh@localhost ~]$ ls -l f[!a]ll
-rw-rw-r--. 1 xh xh 0 Nov 10 15:27 fell
-rw-rw-r--. 1 xh xh 0 Nov 10 15:27 fill
-rw-rw-r--. 1 xh xh 0 Nov 10 15:27 full
--------------------------------------
```


## 处理文件

1. 创建文件
	- 采用touch name 命令进行文件创建
```shell
[xh@localhost ~]$ touch test_one
[xh@localhost ~]$ ls -l test_one
-rw-rw-r--. 1 xh xh 0 Nov 10 15:45 test_one
--------------------------------------
```

2. 复制文件
	-  cp命令：cp source destination 以source为源文件，destination为新复制文件名或者目录路径
	- 可加上 -i 询问是否覆盖已有文件

	```shell
	[xh@localhost ~]$ cp test_one test_two
	[xh@localhost ~]$ ls -l test_one test_two
	-rw-rw-r--. 1 xh xh 0 Nov 10 15:45 test_one
	-rw-rw-r--. 1 xh xh 0 Nov 10 15:46 test_two
	--------------------------------------
	
	[xh@localhost ~]$ cp -i test_one test_two
	cp: overwrite ‘test_two’? n
	--------------------------------------
	```

	- 可将文件复制到现有目录中，也可以采用绝对路径和相对路径
	- cp -R 能够递归地复制整个目录

```Shell

[xh@localhost ~]$ cp -i test_one /home/christine/Documents/
cp: cannot create regular file ‘/home/christine/Documents/’: No such file or directory
[xh@localhost ~]$ cp -i test_one /home/xh/Documents/
[xh@localhost ~]$ ls -l /home/xh/Documents/
total 0
-rw-rw-r--. 1 xh xh 0 Nov 10 15:49 test_one
--------------------------------------

[xh@localhost ~]$ cp -i test_two Documents/
[xh@localhost ~]$ ls -l Documents/
total 0
-rw-rw-r--. 1 xh xh 0 Nov 10 15:49 test_one
-rw-rw-r--. 1 xh xh 0 Nov 10 15:51 test_two
--------------------------------------

# 相对路径- 最后的小点
[xh@localhost ~]$ cp /etc/NetworkManager/NetworkManager.conf .
[xh@localhost ~]$ ls -l Documents/
total 0
-rw-rw-r--. 1 xh xh 0 Nov 10 15:49 test_one
-rw-rw-r--. 1 xh xh 0 Nov 10 15:51 test_two
--------------------------------------


[xh@localhost ~]$ ls *.conf
NetworkManager.conf
[xh@localhost ~]$ pwd
/home/xh
[xh@localhost ~]$ cd etc
bash: cd: etc: No such file or directory
--------------------------------------

[xh@localhost ~]$ ls -l Documents/
total 0
-rw-rw-r--. 1 xh xh 0 Nov 10 15:49 test_one
-rw-rw-r--. 1 xh xh 0 Nov 10 15:51 test_two
--------------------------------------

#将Doc目录下的文件都复制到NewDoc里
[xh@localhost ~]$ cp -R Documents/ NewDocuments/
[xh@localhost ~]$ ls
Desktop    fall  full     my_scrapt            NewDocuments  Templates  Videos
Documents  fell  Music    my_script            Pictures      test_one
Downloads  fill  my_file  NetworkManager.conf  Public        test_two
--------------------------------------

[xh@localhost ~]$ ls -F
Desktop/    fell    my_file              NewDocuments/  test_one
Documents/  fill    my_scrapt            Pictures/      test_two
Downloads/  full    my_script            Public/        Videos/
fall        Music/  NetworkManager.conf  Templates/
--------------------------------------

# 将主目录下的 my等命名的文件复制到NewDoc的文件里
[xh@localhost ~]$ cp my* NewDocuments/
[xh@localhost ~]$ ls NewDocuments/
my_file  my_scrapt  my_script  test_one  test_two
--------------------------------------

```
